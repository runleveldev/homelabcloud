---
name: homelabcloud
services:
  authentik-server:
    image: ghcr.io/goauthentik/server:2025.6.4
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?secret key required}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    command: server
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.authentik.rule: Host(`auth.${BASE_DOMAIN}`)
      traefik.http.routers.authentik.entrypoints: websecure
      traefik.http.routers.authentik.tls: true
    expose:
      - '9000'
      - '9443'
  authentik-worker:
    image: ghcr.io/goauthentik/server:2025.6.4
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
      #- ./blueprints:/blueprints/custom:ro,Z
      - ${DOCKER_SOCK}:/var/run/docker.sock
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?secret key required}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_BOOTSTRAP_PASSWORD: password123
      AUTHENTIK_BOOTSTRAP_TOKEN: password123
      AUTHENTIK_BOOTSTRAP_EMAIL: root@example.com
    command: worker
    restart: unless-stopped
    user: root
    security_opt:
      - label=disable
  postgresql:
    image: docker.io/library/postgres:16-alpine
    volumes:
      - postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
  redis:
    image: docker.io/library/redis:alpine
    volumes:
      - redis:/data
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
  traefik:
    image: docker.io/library/traefik:v3.5
    volumes:
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
      - certs:/certs
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --api.dashboard=true
      - --api.insecure=false
      - --log.level=DEBUG
      - --accesslog=true
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.dashboard.rule: Host(`dashboard.${BASE_DOMAIN}`)
      traefik.http.routers.dashboard.entrypoints: websecure
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.tls: true
      traefik.http.routers.dashboard.middlewares: authentik@docker

      traefik.http.middlewares.authentik.forwardauth.address: http://ak-outpost-proxy-outpost:9000/outpost.goauthentik.io/auth/traefik
      traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    security_opt:
      - no-new-privileges
      - label=disable
volumes:
  certs:
    driver: local
  postgresql:
    driver: local
  redis:
    driver: local
  authentik_media:
    driver: local
  authentik_templates:
    driver: local
  authentik_certs:
    driver: local
